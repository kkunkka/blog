# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - name: Setup pnpm
      uses: pnpm/action-setup@v2.2.4
      with:
    # Version of pnpm to install
        version: latest
    # Where to store pnpm files
        #dest: # optional, default is ~/setup-pnpm
    # If specified, run `pnpm install`
        run_install: false
    - name: install
      run: pnpm i --no-frozen-lockfile
    - name: build
      run: pnpm build
    - name: Upload GitHub Pages artifact
      uses: actions/upload-pages-artifact@v1.0.8
      with:
    # Artifact name
        name: pages
    # Path of the directory containing the static assets.
        path: build/
    # Duration after which artifact will expire in days.
        #retention-days: 1
    - name: Deploy GitHub Pages site
      uses: actions/deploy-pages@v2.0.0
      # with:
        #token: # default is ${{ github.token }}
        #timeout: # optional, default is 600000
    # Maximum number of status report errors before cancelling a deployment (default: 10)
        #error_count: # optional, default is 10
    # Time in milliseconds between two deployment status report (default: 5 seconds)
        #reporting_interval: # optional, default is 5000
    # Name of the artifact to deploy
        #artifact_name: # optional, default is github-pages
    # Is this attempting to deploy a pull request as a GitHub Pages preview site? (NOTE: This feature is only in alpha currently and is not available to the public!)
      #preview: # optional, default is false
